From 5783c1530776245569e939364838efd87cdd6f33 Mon Sep 17 00:00:00 2001
From: Jerome Evillard <jerome.evillard@nxp.com>
Date: Mon, 7 Dec 2020 11:18:23 +0100
Subject: [PATCH 4/6] Support ARM compilation

Upstream-Status: Inappropriate [i.MX specific]

---
 renderdoc/CMakeLists.txt                   | 7 ++++++-
 renderdoc/driver/vulkan/vk_shaderdebug.cpp | 2 +-
 renderdoc/os/posix/linux/linux_process.cpp | 5 ++++-
 renderdoc/replay/replay_driver.cpp         | 4 ++--
 renderdoc/serialise/serialiser.cpp         | 8 ++++++++
 5 files changed, 21 insertions(+), 5 deletions(-)

diff --git a/renderdoc/CMakeLists.txt b/renderdoc/CMakeLists.txt
index 100e894..8c795c3 100644
--- a/renderdoc/CMakeLists.txt
+++ b/renderdoc/CMakeLists.txt
@@ -7,6 +7,11 @@ set(RDOC_INCLUDES
     PRIVATE ${RDOC_SOURCE_DIR}/3rdparty)
 set(RDOC_LIBRARIES)
 
+option(ARM "Arm architecture" ON)
+if(ARM)
+    set(RDOC_DEFINITIONS ${RDOC_DEFINITIONS} PRIVATE -D_ARM)
+endif()
+
 option(ENABLE_DLSYM_HOOKING "Enable dlsym() hooking via glibc internals" OFF)
 
 if(ENABLE_DLSYM_HOOKING)
@@ -333,7 +338,7 @@ elseif(UNIX)
         os/posix/posix_specific.h)
 endif()
 
-if(NOT ANDROID)
+if(NOT ANDROID AND NOT ARM)
     list(APPEND sources
         3rdparty/compressonator/BC1_Encode_kernel.cpp
         3rdparty/compressonator/BC2_Encode_kernel.cpp
diff --git a/renderdoc/driver/vulkan/vk_shaderdebug.cpp b/renderdoc/driver/vulkan/vk_shaderdebug.cpp
index 4e059aa..6be1367 100644
--- a/renderdoc/driver/vulkan/vk_shaderdebug.cpp
+++ b/renderdoc/driver/vulkan/vk_shaderdebug.cpp
@@ -4030,7 +4030,7 @@ ShaderDebugTrace *VulkanReplay::DebugPixel(uint32_t eventId, uint32_t x, uint32_
   // buffer, we'd still want to spec-constant the address when possible so we're always going to
   // have some varying value.
   VkPipeline inputsPipe;
-  vkr = m_pDriver->vkCreateGraphicsPipelines(dev, NULL, 1, &graphicsInfo, NULL, &inputsPipe);
+  vkr = m_pDriver->vkCreateGraphicsPipelines(dev, VK_NULL_HANDLE, 1, &graphicsInfo, NULL, &inputsPipe);
   RDCASSERTEQUAL(vkr, VK_SUCCESS);
 
   // make copy of state to draw from
diff --git a/renderdoc/os/posix/linux/linux_process.cpp b/renderdoc/os/posix/linux/linux_process.cpp
index 7db273f..9032009 100644
--- a/renderdoc/os/posix/linux/linux_process.cpp
+++ b/renderdoc/os/posix/linux/linux_process.cpp
@@ -198,11 +198,13 @@ static uint64_t get_nanotime()
 
 static uint64_t get_child_ip(pid_t childPid)
 {
+#ifndef _ARM
   user_regs_struct regs = {};
 
   long ptraceRet = ptrace(PTRACE_GETREGS, childPid, NULL, &regs);
   if(ptraceRet == 0)
     return uint64_t(regs.INST_PTR_REG);
+#endif
 
   return 0;
 }
@@ -461,7 +463,7 @@ bool StopChildAtMain(pid_t childPid)
     RDCLOG("Process %u hit entry point", childPid);
 
   // we're now at main! now just need to clean up after ourselves
-
+#ifndef _ARM
   user_regs_struct regs = {};
 
   ptraceRet = ptrace(PTRACE_GETREGS, childPid, NULL, &regs);
@@ -475,6 +477,7 @@ bool StopChildAtMain(pid_t childPid)
   regs.INST_PTR_REG--;
   ptraceRet = ptrace(PTRACE_SETREGS, childPid, NULL, &regs);
   RDCASSERTEQUAL(ptraceRet, 0);
+#endif
 
   // restore the function
   ptraceRet = ptrace(PTRACE_POKETEXT, childPid, entry, origEntryWord);
diff --git a/renderdoc/replay/replay_driver.cpp b/renderdoc/replay/replay_driver.cpp
index a704726..32ce162 100644
--- a/renderdoc/replay/replay_driver.cpp
+++ b/renderdoc/replay/replay_driver.cpp
@@ -1430,8 +1430,8 @@ bytebuf GetDiscardPattern(DiscardType type, const ResourceFormat &fmt, uint32_t
           fmt.type == ResourceFormatType::BC5 || fmt.type == ResourceFormatType::BC6 ||
           fmt.type == ResourceFormatType::BC7)
   {
-#if ENABLED(RDOC_ANDROID)
-    RDCERR("Format %s not supported on android", fmt.Name().c_str());
+#if ENABLED(RDOC_ANDROID) || defined(_ARM)
+    RDCERR("Format %s not supported", fmt.Name().c_str());
 #else
     const uint16_t whalf = ConvertToHalf(1000.0f);
 
diff --git a/renderdoc/serialise/serialiser.cpp b/renderdoc/serialise/serialiser.cpp
index 460a310..eda1226 100644
--- a/renderdoc/serialise/serialiser.cpp
+++ b/renderdoc/serialise/serialiser.cpp
@@ -881,6 +881,14 @@ rdcstr DoStringise(const int64_t &el)
   return StringFormat::Fmt("%lld", el);
 }
 
+#if __WORDSIZE != 64
+template <>
+rdcstr DoStringise(const long &el)
+{
+  return StringFormat::Fmt("%ld", el);
+}
+#endif
+
 #if ENABLED(RDOC_SIZET_SEP_TYPE)
 template <>
 rdcstr DoStringise(const size_t &el)
-- 
2.7.4

